on:
    push:
      branches:
        - main
      paths: 
        - docs/**
  
name: Pull Request to Fest Client

jobs:
  send-pull-requests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Send PR
        run: |
          LATEST_TAG=$(git describe --tags --always --abbrev=0)
          REPOSITORY="delta/fest-web-client"
          FOLDER="bin/$REPOSITORY"
          BRANCH_NAME="docs-pr"

          # Clone the remote repository and change working directory to the
          # folder it was cloned to.
          git clone \
          --depth=1 \
          --branch=main \
          https://${{ secrets.USERNAME }}:${{ secrets.ACCESS_TOKEN }}@github.com/$REPOSITORY \
          $FOLDER

          cd $FOLDER

          # Setup the committers identity.
          git config user.email ${{ secrets.EMAIL }}
          git config user.name ${{ secrets.USERNAME }}

          # Create a new feature branch for the changes.
          git checkout -b $BRANCH_NAME

          cp ${{ github.workspace }}/docs/swagger.yaml spec/festAPI.yml

          # Commit the changes and push the feature branch to origin

          git add .
          git commit -m "docs: update docs"
          git push -f origin $BRANCH_NAME

          # Store the PAT in a file that can be accessed by the
          # GitHub CLI.
          echo "${{ secrets.ACCESS_TOKEN }}" > token.txt

          # Authorize GitHub CLI for the current repository and
          # create a pull-requests containing the updates.
          gh auth login --with-token < token.txt
          gh pr create \
                --body "Updated Swagger Docs" \
                --title "docs: update swagger docs" \
                --head "$BRANCH_NAME" \
                --base "main"
