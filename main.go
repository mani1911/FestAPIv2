package main

import (
	"github.com/delta/FestAPI/config"
	"github.com/delta/FestAPI/registry"
	"github.com/delta/FestAPI/router"
	"github.com/delta/FestAPI/utils"

	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"

	_ "github.com/delta/FestAPI/docs" // docs is generated by Swag CLI, you have to import it.
)

//	@title			FestAPI v2
//	@version		1.0
//	@description	API Server for all fests

//	@contact.name	API Support
//	@contact.url	http://www.swagger.io/support
//	@contact.email	support@swagger.io

//	@license.name	MIT
//	@license.url	https://opensource.org/licenses/MIT

// @host						localhost:8000
// @BasePath					/
// @query.collection.format	multi

// @securityDefinitions.apikey	ApiKeyAuth
// @in							header
//	@name						Authorization
//	@description				Authorization token

func main() {

	server := echo.New()
	server.Use(middleware.Recover())
	server.Use(middleware.Gzip())

	// remove after debugging
	server.Use(middleware.LoggerWithConfig(middleware.LoggerConfig{
		Format: "method=${method}, uri=${uri}, status=${status}\n",
	}))

	config.InitConfig()
	config.ConnectDB()
	config.MigrateDB()

	server.Use(middleware.CORSWithConfig(middleware.CORSConfig{
		AllowOrigins:     []string{config.FrontendURL},
		AllowHeaders:     []string{echo.HeaderOrigin, echo.HeaderContentType, echo.HeaderAccept, echo.HeaderAuthorization},
		AllowCredentials: true,
	}))

	db := config.GetDB()

	registry := registry.NewRegistry(db)

	router.NewRouter(server, registry)

	utils.InitLogger()

	server.Logger.Fatal(server.Start(":" + config.ServerPort))

}
